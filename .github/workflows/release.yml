# .github/workflows/release.yml
name: Build and Release Forem

on:
  push:
    branches:
      - 'release/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/forem

jobs:
  validate-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
      base-branch: ${{ steps.extract.outputs.base-branch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version and validate base
        id: extract
        run: |
          if [[ "${{ github.ref }}" == refs/heads/release/* ]]; then
            VERSION=${GITHUB_REF#refs/heads/release/}
            
            # Verificar que la rama release se cre√≥ desde maindev
            BASE_BRANCH=$(git merge-base --fork-point origin/maindev HEAD)
            MAINDEV_HEAD=$(git rev-parse origin/maindev)
            
            if [[ "$BASE_BRANCH" != "$MAINDEV_HEAD" ]]; then
              echo "‚ùå Error: La rama release debe crearse desde maindev"
              echo "Ejecuta: git checkout maindev && git checkout -b release/$VERSION"
              exit 1
            fi
            
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "base-branch=maindev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "base-branch=maindev" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Trigger no v√°lido para release"
            exit 1
          fi

  build-and-push:
    needs: validate-release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.validate-release.outputs.version }}
            type=raw,value=latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            VERSION=${{ needs.validate-release.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.validate-release.outputs.version }}
          name: Forem Custom v${{ needs.validate-release.outputs.version }}
          body: |
            ## üöÄ Forem Custom Release v${{ needs.validate-release.outputs.version }}
            
            ### ‚ú® Custom Features
            - ‚úÖ Wasabi S3-compatible storage support
            - ‚úÖ Built from source with latest Forem updates
            - ‚úÖ Based on maindev branch with custom modifications
            
            ### üê≥ Docker Image
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.validate-release.outputs.version }}
            ```
            
            ### üì¶ Quick Deploy
            ```yaml
            services:
              forem:
                image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.validate-release.outputs.version }}
                environment:
                  - AWS_S3_ENDPOINT=https://s3.wasabisys.com
                  # ... other env vars
            ```
          draft: false
          prerelease: false